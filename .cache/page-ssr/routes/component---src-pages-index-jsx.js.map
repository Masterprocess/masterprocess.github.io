{"version":3,"file":"component---src-pages-index-jsx.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/ContactForm.tsx","webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/Footer.jsx","webpack://gatsby-starter-default/./src/components/Layout.tsx","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/HeroBauhaus.jsx","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/./src/components/AboutMe.jsx","webpack://gatsby-starter-default/./src/data/projects.js","webpack://gatsby-starter-default/./src/components/ProjectCard.jsx","webpack://gatsby-starter-default/./src/components/FeaturedWork.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ContactForm: React.FC = () => (\r\n  <form name=\"contact\" method=\"POST\" data-netlify=\"true\" className=\"space-y-4\">\r\n    <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n    <div>\r\n      <label htmlFor=\"name\" className=\"block text-sm font-semibold\">\r\n        Name\r\n      </label>\r\n      <input id=\"name\" name=\"name\" className=\"w-full border p-2\" />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"email\" className=\"block text-sm font-semibold\">\r\n        Email\r\n      </label>\r\n      <input type=\"email\" id=\"email\" name=\"email\" className=\"w-full border p-2\" />\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"message\" className=\"block text-sm font-semibold\">\r\n        Message\r\n      </label>\r\n      <textarea id=\"message\" name=\"message\" rows={4} className=\"w-full border p-2\"></textarea>\r\n    </div>\r\n    <button type=\"submit\" className=\"rounded bg-bauhausBlue px-4 py-2 font-semibold text-white\">\r\n      Send\r\n    </button>\r\n  </form>\r\n);\r\n\r\nexport default ContactForm;\r\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Header = () => (\r\n  <header className=\"bg-bauhausRed text-white\">\r\n    <div className=\"container mx-auto flex flex-wrap items-center justify-between px-4 py-4\">\r\n      <Link to=\"/\" className=\"font-bold hover:underline\">\r\n        Zoe Rackley\r\n      </Link>\r\n      <nav className=\"flex flex-wrap space-x-4\">\r\n        <Link to=\"/\" className=\"hover:underline\">Home</Link>\r\n        <Link to=\"/contact\" className=\"hover:underline\">Contact</Link>\r\n        <Link to=\"/resume\" className=\"hover:underline\">Resume</Link>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"bg-bauhausBlack py-4 text-center text-white\">\r\n    © {new Date().getFullYear()} Zoe Rackley\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { ReactNode } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport interface LayoutProps {\r\n  children: ReactNode;\r\n  showFooter?: boolean;\r\n}\r\n\r\nconst Layout = ({ children, showFooter = true }: LayoutProps) => {\r\n  return (\r\n    <div className=\"flex min-h-screen flex-col font-sans\">\r\n      <Header />\r\n      <main className=\"flex-grow\">{children}</main>\r\n      {showFooter && <Footer />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React from \"react\";\r\n\r\nconst HeroBauhaus = ({ intro, ctaText, ctaLink }) => {\r\n  return (\r\n    <section\r\n      id=\"welcome\"\r\n      className=\"relative flex h-[32rem] flex-col items-center justify-center bg-bauhausYellow overflow-hidden text-center space-y-4\"\r\n    >\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-0 left-0 h-48 w-48 bg-bauhausBlue\"></div>\r\n        <div className=\"absolute bottom-0 right-0 h-32 w-32 bg-bauhausRed\"></div>\r\n        <div className=\"absolute top-10 right-10 h-24 w-24 rounded-full border-4 border-bauhausBlack\"></div>\r\n        <div className=\"absolute bottom-10 left-1/2 h-16 w-16 -translate-x-1/2 bg-bauhausBlack\"></div>\r\n      </div>\r\n      <h1 className=\"relative text-5xl font-bold text-bauhausBlack\">\r\n        Welcome to my portfolio\r\n      </h1>\r\n      {intro && (\r\n        <p className=\"relative max-w-lg text-lg text-bauhausBlack\">{intro}</p>\r\n      )}\r\n      {ctaText && ctaLink && (\r\n        <a\r\n          href={ctaLink}\r\n          className=\"relative inline-block rounded bg-bauhausRed px-4 py-2 font-semibold text-white hover:bg-bauhausBlack\"\r\n        >\r\n          {ctaText}\r\n        </a>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroBauhaus;\r\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst AboutMe = () => (\r\n  <section id=\"about\" className=\"container mx-auto px-4 py-8 bg-gray-100\">\r\n    <h2 className=\"mb-4 text-2xl font-bold\">About</h2>\r\n    <div className=\"flex flex-col items-center gap-4 md:flex-row\">\r\n      <StaticImage\r\n        src=\"../images/profile.svg\"\r\n        alt=\"Profile photo\"\r\n        className=\"h-32 w-32 rounded-full\"\r\n      />\r\n      <p className=\"text-gray-700\">\r\n        Hello! I'm Zoe Rackley, a UX designer fascinated by the principles of\r\n        Bauhaus design. I enjoy blending geometry, color, and usability to craft\r\n        engaging digital experiences.\r\n      </p>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default AboutMe;\r\n","const projects = [\r\n  {\r\n    title: \"Project One\",\r\n    description: \"A Bauhaus-themed dashboard interface.\",\r\n    image: \"../images/projects/project1.svg\",\r\n    demo: \"https://example.com/project-one\",\r\n    source: \"https://github.com/masterprocess/project-one\",\r\n  },\r\n  {\r\n    title: \"Project Two\",\r\n    description: \"Mobile app prototype exploring color and form.\",\r\n    image: \"../images/projects/project2.svg\",\r\n    demo: \"https://example.com/project-two\",\r\n    source: \"https://github.com/masterprocess/project-two\",\r\n  },\r\n  {\r\n    title: \"Project Three\",\r\n    description: \"Experiment with geometric typography.\",\r\n    image: \"../images/projects/project3.svg\",\r\n    demo: \"https://example.com/project-three\",\r\n    source: \"https://github.com/masterprocess/project-three\",\r\n  },\r\n];\r\n\r\nexport default projects;\r\n","import React from \"react\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst ProjectCard = ({ project }) => {\r\n  const renderImage = () => {\r\n    switch (project.image) {\r\n      case \"../images/projects/project1.svg\":\r\n        return (\r\n          <StaticImage\r\n            src=\"../images/projects/project1.svg\"\r\n            alt={project.title}\r\n            className=\"w-full\"\r\n          />\r\n        );\r\n      case \"../images/projects/project2.svg\":\r\n        return (\r\n          <StaticImage\r\n            src=\"../images/projects/project2.svg\"\r\n            alt={project.title}\r\n            className=\"w-full\"\r\n          />\r\n        );\r\n      case \"../images/projects/project3.svg\":\r\n        return (\r\n          <StaticImage\r\n            src=\"../images/projects/project3.svg\"\r\n            alt={project.title}\r\n            className=\"w-full\"\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2 rounded border p-4 shadow bg-white\">\r\n      {renderImage()}\r\n      <h3 className=\"text-xl font-semibold\">{project.title}</h3>\r\n      <p className=\"text-gray-700\">{project.description}</p>\r\n      <div className=\"space-x-4\">\r\n        <a href={project.demo} className=\"text-bauhausBlue underline\">\r\n          Demo\r\n        </a>\r\n        <a href={project.source} className=\"text-bauhausRed underline\">\r\n          Code\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport projects from \"../data/projects\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst FeaturedWork = () => (\r\n  <section id=\"work\" className=\"container mx-auto px-4 py-8\">\r\n    <h2 className=\"mb-4 text-2xl font-bold\">Featured Work</h2>\r\n    <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\r\n      {projects.map((project) => (\r\n        <ProjectCard key={project.title} project={project} />\r\n      ))}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default FeaturedWork;\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport HeroBauhaus from \"../components/HeroBauhaus\";\r\nimport AboutMe from \"../components/AboutMe\";\r\nimport FeaturedWork from \"../components/FeaturedWork\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Seo from \"../components/seo\";\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <HeroBauhaus\r\n      intro=\"Bauhaus-inspired interfaces and user experiences.\"\r\n      ctaText=\"Contact Me\"\r\n      ctaLink=\"#contact\"\r\n    />\r\n    <AboutMe />\r\n    <FeaturedWork />\r\n    <section id=\"contact\" className=\"container mx-auto px-4 py-8 bg-gray-100\">\r\n      <h2 className=\"mb-4 text-2xl font-bold\">Get in Touch</h2>\r\n      <p className=\"mb-4 text-gray-700\">\r\n        Reach out to discuss potential collaborations or just say hello!\r\n      </p>\r\n      <ContactForm />\r\n    </section>\r\n  </Layout>\r\n);\r\n\r\nexport const Head = () => <Seo title=\"Home\" />;\r\n\r\nexport default IndexPage;\r\n"],"names":["React","ContactForm","createElement","name","method","className","type","value","htmlFor","id","rows","Link","Header","to","Footer","Date","getFullYear","Layout","children","showFooter","useStaticQuery","Seo","description","title","_site$siteMetadata","_site$siteMetadata2","site","metaDescription","siteMetadata","defaultTitle","Fragment","content","property","author","HeroBauhaus","intro","ctaText","ctaLink","href","s","l","u","d","c","h","g","warn","e","console","p","sortNumeric","t","m","getSizes","f","getSrcSet","map","src","width","join","v","lastIndexOf","a","slice","length","w","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","toLowerCase","n","Math","round","y","generateImageSource","filename","format","fit","options","b","pluginName","reporter","S","N","backgroundColor","x","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","filter","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","_","images","placeholder","dedupeAndSortDensities","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","decoding","L","Picture","key","propTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","G","V","U","removeNewLines","replace","X","GatsbyImage","as","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","number","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection","AboutMe","require","projects","demo","source","ProjectCard","project","renderImage","FeaturedWork","IndexPage","Head"],"sourceRoot":""}