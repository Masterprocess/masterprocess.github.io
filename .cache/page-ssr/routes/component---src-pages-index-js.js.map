{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/./src/components/index.module.css","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <img\n      alt=\"Gatsby logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"\n    />\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Exports\nexport var list = \"index-module--list--fb407\";\nexport var listItem = \"index-module--listItem--06e6d\";\nexport var listItemLink = \"index-module--listItemLink--02c9e\";\nexport var listItemDescription = \"index-module--listItemDescription--f3875\";\nexport var textCenter = \"index-module--textCenter--4ece3\";\nexport var intro = \"index-module--intro--0b876\";\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as styles from \"../components/index.module.css\"\n\nconst links = [\n  {\n    text: \"Tutorial\",\n    url: \"https://www.gatsbyjs.com/docs/tutorial\",\n    description:\n      \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n  },\n  {\n    text: \"Examples\",\n    url: \"https://github.com/gatsbyjs/gatsby/tree/master/examples\",\n    description:\n      \"A collection of websites ranging from very basic to complex/complete that illustrate how to accomplish specific tasks within your Gatsby sites.\",\n  },\n  {\n    text: \"Plugin Library\",\n    url: \"https://www.gatsbyjs.com/plugins\",\n    description:\n      \"Learn how to add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n  },\n  {\n    text: \"Build and Host\",\n    url: \"https://www.gatsbyjs.com/cloud\",\n    description:\n      \"Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n  },\n]\n\nconst samplePageLinks = [\n  {\n    text: \"Page 2\",\n    url: \"page-2\",\n    badge: false,\n    description:\n      \"A simple example of linking to another page within a Gatsby site\",\n  },\n  { text: \"TypeScript\", url: \"using-typescript\" },\n  { text: \"Server Side Rendering\", url: \"using-ssr\" },\n  { text: \"Deferred Static Generation\", url: \"using-dsg\" },\n]\n\nconst moreLinks = [\n  { text: \"Join us on Discord\", url: \"https://gatsby.dev/discord\" },\n  {\n    text: \"Documentation\",\n    url: \"https://gatsbyjs.com/docs/\",\n  },\n  {\n    text: \"Starters\",\n    url: \"https://gatsbyjs.com/starters/\",\n  },\n  {\n    text: \"Showcase\",\n    url: \"https://gatsbyjs.com/showcase/\",\n  },\n  {\n    text: \"Contributing\",\n    url: \"https://www.gatsbyjs.com/contributing/\",\n  },\n  { text: \"Issues\", url: \"https://github.com/gatsbyjs/gatsby/issues\" },\n]\n\nconst utmParameters = `?utm_source=starter&utm_medium=start-page&utm_campaign=default-starter`\n\nconst IndexPage = () => (\n  <Layout>\n    <div className={styles.textCenter}>\n      <StaticImage\n        src=\"../images/example.png\"\n        loading=\"eager\"\n        width={64}\n        quality={95}\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        alt=\"\"\n        style={{ marginBottom: `var(--space-3)` }}\n      />\n      <h1>\n        Welcome to <b>Gatsby!</b>\n      </h1>\n      <p className={styles.intro}>\n        <b>Example pages:</b>{\" \"}\n        {samplePageLinks.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link to={link.url}>{link.text}</Link>\n            {i !== samplePageLinks.length - 1 && <> · </>}\n          </React.Fragment>\n        ))}\n        <br />\n        Edit <code>src/pages/index.js</code> to update this page.\n      </p>\n    </div>\n    <ul className={styles.list}>\n      {links.map(link => (\n        <li key={link.url} className={styles.listItem}>\n          <a\n            className={styles.listItemLink}\n            href={`${link.url}${utmParameters}`}\n          >\n            {link.text} ↗\n          </a>\n          <p className={styles.listItemDescription}>{link.description}</p>\n        </li>\n      ))}\n    </ul>\n    {moreLinks.map((link, i) => (\n      <React.Fragment key={link.url}>\n        <a href={`${link.url}${utmParameters}`}>{link.text}</a>\n        {i !== moreLinks.length - 1 && <> · </>}\n      </React.Fragment>\n    ))}\n  </Layout>\n)\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport default IndexPage\n"],"names":["React","Link","Header","siteTitle","createElement","style","margin","padding","display","alignItems","justifyContent","to","fontSize","textDecoration","alt","height","src","useStaticQuery","Layout","children","_data$site$siteMetada","data","Fragment","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","href","Seo","description","_site$siteMetadata","_site$siteMetadata2","metaDescription","defaultTitle","name","content","property","author","DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","DEFAULT_FLUID_WIDTH","DEFAULT_FIXED_WIDTH","DEFAULT_ASPECT_RATIO","warn","message","sortNumeric","a","b","getSizes","width","layout","getSrcSet","images","map","image","join","formatFromFilename","filename","lastIndexOf","dot","ext","slice","length","setDefaultDimensions","args","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","_extends","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","_sourceMetadata","pluginName","reporter","_args2$reporter","backgroundColor","placeholderURL","Error","Set","size","has","delete","add","imageSizes","imgDimensions","_args$reporter","_args$breakpoints","erroneousUserDimensions","Object","entries","filter","_","_ref","dim","_ref2","_ref2$fit","outputPixelDensities","_ref2$reporter","densities","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","_ref3","_ref3$fit","_ref3$outputPixelDens","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","_widthOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2$images","_getImage2","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","_breakpoints","withArtDirection","defaultImage","artDirected","_output$placeholder","output","_excluded2","media","process","env","NODE_ENV","console","source","concat","_output$placeholder$s","apply","_Picture$propTypes","loading","shouldLoad","decoding","undefined","Picture","_ref2$shouldLoad","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","paddingTop","role","position","LayoutWrapper","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","_getWrapperProps","wClass","wrapperProps","cleanedImages","getPlaceholderProps","isLoaded","top","left","bottom","right","opacity","transition","isLoading","transform","willChange","getMainProps","_excluded","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","styles","links","text","url","samplePageLinks","badge","moreLinks","utmParameters","IndexPage","textCenter","quality","marginBottom","require","intro","link","i","list","listItem","listItemLink","listItemDescription","Head"],"sourceRoot":""}